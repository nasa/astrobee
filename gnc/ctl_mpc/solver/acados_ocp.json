{
    "acados_include_path": "/home/jonne/acados/include",
    "acados_lib_path": "/home/jonne/acados/lib",
    "code_export_directory": "/home/jonne/astrobee/src/gnc/ctl_mpc/solver/c_generated_code",
    "constraints": {
        "C": [],
        "C_e": [],
        "D": [],
        "constr_type": "BGH",
        "constr_type_e": "BGH",
        "idxbu": [
            0.0,
            1.0,
            2.0,
            3.0,
            4.0,
            5.0
        ],
        "idxbx": [],
        "idxbx_0": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11
        ],
        "idxbx_e": [],
        "idxbxe_0": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11
        ],
        "idxsbu": [],
        "idxsbx": [],
        "idxsbx_e": [],
        "idxsg": [],
        "idxsg_e": [],
        "idxsh": [],
        "idxsh_e": [],
        "idxsphi": [],
        "idxsphi_e": [],
        "lbu": [
            -0.85,
            -0.41,
            -0.41,
            -0.085,
            -0.041,
            -0.041
        ],
        "lbx": [],
        "lbx_0": [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "lbx_e": [],
        "lg": [],
        "lg_e": [],
        "lh": [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0
        ],
        "lh_e": [
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0,
            -1000000000000000.0
        ],
        "lphi": [],
        "lphi_e": [],
        "lsbu": [],
        "lsbx": [],
        "lsbx_e": [],
        "lsg": [],
        "lsg_e": [],
        "lsh": [],
        "lsh_e": [],
        "lsphi": [],
        "lsphi_e": [],
        "ubu": [
            0.85,
            0.41,
            0.41,
            0.085,
            0.041,
            0.041
        ],
        "ubx": [],
        "ubx_0": [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "ubx_e": [],
        "ug": [],
        "ug_e": [],
        "uh": [
            1000000000000000.0,
            1000000000000000.0,
            1000000000000000.0,
            1000000000000000.0,
            1000000000000000.0,
            1000000000000000.0,
            1000000000000000.0,
            1000000000000000.0,
            1000000000000000.0,
            1000000000000000.0,
            1000000000000000.0,
            1000000000000000.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "uh_e": [
            1.2,
            0.1,
            0.1,
            1.2,
            0.1,
            0.1,
            0.1893895542721036,
            0.1893895542721036,
            0.0984156608138769,
            0.0984156608138769,
            0.0984156608138769,
            0.0984156608138769,
            0.19972690630892312,
            0.19972690630892312,
            0.09461981464064925,
            0.09461981464064925,
            0.09461981464064925,
            0.09461981464064925,
            0.2110368465225312,
            0.2110368465225312,
            0.08991944513789338,
            0.08991944513789338,
            0.08991944513789338,
            0.08991944513789338,
            0.22342606782791527,
            0.22342606782791527,
            0.08518371852615683,
            0.08518371852615683,
            0.08518371852615683,
            0.08518371852615683,
            0.08085254317515395,
            0.08085254317515395,
            0.08085254317515395,
            0.08085254317515395,
            0.07709221895874693,
            0.07709221895874693,
            0.07709221895874693,
            0.07709221895874693,
            0.07392838238966074,
            0.07392838238966074,
            0.07392838238966074,
            0.07392838238966074,
            0.07132548589956735,
            0.07132548589956735,
            0.07132548589956735,
            0.07132548589956735,
            0.06922725464951465,
            0.06922725464951465,
            0.06922725464951465,
            0.06922725464951465,
            0.06757520158934696,
            0.06757520158934696,
            0.06757520158934696,
            0.06757520158934696,
            0.06631615544680305,
            0.06631615544680305,
            0.06631615544680305,
            0.06631615544680305,
            0.06540466666409214,
            0.06540466666409214,
            0.06540466666409214,
            0.06540466666409214,
            0.06480318686667315,
            0.06480318686667315,
            0.06480318686667315,
            0.06480318686667315,
            0.06448138500403758,
            0.06448138500403758,
            0.06448138500403758,
            0.06448138500403758,
            0.06441521526522961,
            0.06441521526522961,
            0.06441521526522961,
            0.06441521526522961,
            0.06458599803645261,
            0.06458599803645261,
            0.06458599803645261,
            0.06458599803645261,
            0.0649796121809427,
            0.0649796121809427,
            0.0649796121809427,
            0.0649796121809427,
            0.06558582451495656,
            0.06558582451495656,
            0.06558582451495656,
            0.06558582451495656,
            0.06639775227449232,
            0.06639775227449232,
            0.06639775227449232,
            0.06639775227449232,
            0.06741144366434573,
            0.06741144366434573,
            0.06741144366434573,
            0.06741144366434573,
            0.0686255594314776,
            0.0686255594314776,
            0.0686255594314776,
            0.0686255594314776,
            0.07004113976573303,
            0.07004113976573303,
            0.07004113976573303,
            0.07004113976573303,
            0.07166144340603295,
            0.07166144340603295,
            0.07166144340603295,
            0.07166144340603295,
            0.1,
            0.1,
            0.1,
            0.1,
            0.1,
            0.1,
            0.10625180277066076,
            0.05358291646609077,
            0.04955924582149085,
            0.10625180277066076,
            0.05358291646609077,
            0.04955924582149085,
            0.14950381769835486,
            0.1462997056309771,
            0.15200213079626354,
            0.14950381769835486,
            0.1462997056309771,
            0.15200213079626354,
            0.13890763045596186,
            0.14028994721825228,
            0.13890763045596186,
            0.14028994721825228
        ],
        "uphi": [],
        "uphi_e": [],
        "usbu": [],
        "usbx": [],
        "usbx_e": [],
        "usg": [],
        "usg_e": [],
        "ush": [],
        "ush_e": [],
        "usphi": [],
        "usphi_e": []
    },
    "cost": {
        "Vu": [],
        "Vu_0": [],
        "Vx": [],
        "Vx_0": [],
        "Vx_e": [],
        "Vz": [],
        "Vz_0": [],
        "W": [],
        "W_0": [],
        "W_e": [],
        "Zl": [],
        "Zl_e": [],
        "Zu": [],
        "Zu_e": [],
        "cost_ext_fun_type": "casadi",
        "cost_ext_fun_type_0": "casadi",
        "cost_ext_fun_type_e": "casadi",
        "cost_type": "EXTERNAL",
        "cost_type_0": "EXTERNAL",
        "cost_type_e": "EXTERNAL",
        "yref": [],
        "yref_0": [],
        "yref_e": [],
        "zl": [],
        "zl_e": [],
        "zu": [],
        "zu_e": []
    },
    "cython_include_dirs": [
        "/home/jonne/.local/lib/python3.8/site-packages/numpy/core/include",
        "/usr/include/python3.8"
    ],
    "dims": {
        "N": 10,
        "nbu": 6,
        "nbx": 0,
        "nbx_0": 12,
        "nbx_e": 0,
        "nbxe_0": 12,
        "ng": 0,
        "ng_e": 0,
        "nh": 24,
        "nh_e": 128,
        "np": 46,
        "nphi": 0,
        "nphi_e": 0,
        "nr": 0,
        "nr_e": 0,
        "ns": 0,
        "ns_e": 0,
        "nsbu": 0,
        "nsbx": 0,
        "nsbx_e": 0,
        "nsg": 0,
        "nsg_e": 0,
        "nsh": 0,
        "nsh_e": 0,
        "nsphi": 0,
        "nsphi_e": 0,
        "nu": 6,
        "nx": 12,
        "ny": 0,
        "ny_0": 0,
        "ny_e": 0,
        "nz": 0
    },
    "json_file": "acados_ocp.json",
    "model": {
        "con_h_expr": "vertcat(((x-xref)+x_lim), ((x-xref)-x_lim))",
        "con_h_expr_e": "mac(\n[[1, 0, 0, ..., 0, 0, 0], \n [0, 1, 0, ..., 0, 0, 0], \n [0, 0, 1, ..., 0, 0, 0], \n ...,\n [0, 0, 0, ..., 0, 0, -0.0510817], \n [0, 0, 0, ..., 0.0606851, 0, 0], \n [0, 0, 0, ..., 0, 0, 0.0510817]],(x-xref),zeros(128x1))",
        "con_phi_expr": null,
        "con_phi_expr_e": null,
        "con_r_expr": null,
        "con_r_expr_e": null,
        "con_r_in_phi": null,
        "con_r_in_phi_e": null,
        "cost_conl_custom_outer_hess": null,
        "cost_conl_custom_outer_hess_0": null,
        "cost_conl_custom_outer_hess_e": null,
        "cost_expr_ext_cost": "(mac(mac((x'-xref'),q[:12],zeros(1x12)),(x-xref),0)+mac(mac(u',r[:6],zeros(1x6)),u,0))",
        "cost_expr_ext_cost_0": "(mac(mac((x'-xref'),q[:12],zeros(1x12)),(x-xref),0)+mac(mac(u',r[:6],zeros(1x6)),u,0))",
        "cost_expr_ext_cost_custom_hess": null,
        "cost_expr_ext_cost_custom_hess_0": null,
        "cost_expr_ext_cost_custom_hess_e": null,
        "cost_expr_ext_cost_e": "mac(mac((x'-xref'),(100*q)[:12],zeros(1x12)),(x-xref),0)",
        "cost_psi_expr": null,
        "cost_psi_expr_0": null,
        "cost_psi_expr_e": null,
        "cost_r_in_psi_expr": null,
        "cost_r_in_psi_expr_0": null,
        "cost_r_in_psi_expr_e": null,
        "cost_y_expr": null,
        "cost_y_expr_0": null,
        "cost_y_expr_e": null,
        "disc_dyn_expr": "(mac(\n[[1, 0, 0, 0.1, 0, 0, 0, 0, 0, 0, 0, 0], \n [0, 1, 0, 0, 0.1, 0, 0, 0, 0, 0, 0, 0], \n [0, 0, 1, 0, 0, 0.1, 0, 0, 0, 0, 0, 0], \n [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], \n [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0], \n [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0], \n [0, 0, 0, 0, 0, 0, 1, 0, 0, 0.1, 0, 0], \n [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0.1, 0], \n [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0.1], \n [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0], \n [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0], \n [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]],x,zeros(12x1))+mac(\n[[0.000520989, 0, 0, 0, 0, 0], \n [0, 0.000520989, 0, 0, 0, 0], \n [0, 0, 0.000520989, 0, 0, 0], \n [0.0104167, 0, 0, 0, 0, 0], \n [0, 0.0104167, 0, 0, 0, 0], \n [0, 0, 0.0104167, 0, 0, 0], \n [0, 0, 0, 0.0326042, 0, 0], \n [0, 0, 0, 0, 0.035049, 0], \n [0, 0, 0, 0, 0, 0.0308163], \n [0, 0, 0, 0.65189, 0, 0], \n [0, 0, 0, 0, 0.700771, 0], \n [0, 0, 0, 0, 0, 0.616143]],u,zeros(12x1)))",
        "dyn_disc_fun": null,
        "dyn_disc_fun_jac": null,
        "dyn_disc_fun_jac_hess": null,
        "dyn_ext_fun_type": "casadi",
        "dyn_generic_source": null,
        "f_expl_expr": "@1=x[8], @2=cos(@1), @3=x[7], @4=cos(@3), @5=sin(@3), @6=x[6], @7=sin(@6), @8=sin(@1), @9=cos(@6), @10=x[6], @11=x[7], @12=x[9:12], @13=inertia[:3], @14=x[11], @15=x[10], @16=x[9], vertcat(x[3:6], (mac((((((((((zeros(3x3)[0] = (@2*@4))[3] = (((@2*@5)*@7)-(@8*@9)))[6] = (((@2*@5)*@9)+(@8*@7)))[1] = (@8*@4))[4] = (((@8*@5)*@7)+(@2*@9)))[7] = (((@8*@5)*@9)-(@2*@7)))[2] = (-@5))[5] = (@4*@7))[8] = (@4*@9)),u[:3],zeros(3x1))/mass), mac((((((((zeros(3x3)[0] = 1)[3] = (sin(@10)*tan(@11)))[6] = (cos(@10)*tan(@11)))[4] = cos(@10))[7] = (-sin(@10)))[5] = (sin(@10)/cos(@11)))[8] = (cos(@10)/cos(@11))),@12,zeros(3x1)), mac((@13\\\n[[1, 0, 0], \n [0, 1, 0], \n [0, 0, 1]]),(u[3:6]+mac(((((((zeros(3x3)[3] = (-@14))[1] = @14)[6] = @15)[2] = (-@15))[7] = (-@16))[5] = @16),mac(@13,@12,zeros(3x1)),zeros(3x1))),zeros(3x1)))",
        "f_impl_expr": "@1=x[8], @2=cos(@1), @3=x[7], @4=cos(@3), @5=sin(@3), @6=x[6], @7=sin(@6), @8=sin(@1), @9=cos(@6), @10=x[6], @11=x[7], @12=x[9:12], @13=inertia[:3], @14=x[11], @15=x[10], @16=x[9], (xdot-vertcat(x[3:6], (mac((((((((((zeros(3x3)[0] = (@2*@4))[3] = (((@2*@5)*@7)-(@8*@9)))[6] = (((@2*@5)*@9)+(@8*@7)))[1] = (@8*@4))[4] = (((@8*@5)*@7)+(@2*@9)))[7] = (((@8*@5)*@9)-(@2*@7)))[2] = (-@5))[5] = (@4*@7))[8] = (@4*@9)),u[:3],zeros(3x1))/mass), mac((((((((zeros(3x3)[0] = 1)[3] = (sin(@10)*tan(@11)))[6] = (cos(@10)*tan(@11)))[4] = cos(@10))[7] = (-sin(@10)))[5] = (sin(@10)/cos(@11)))[8] = (cos(@10)/cos(@11))),@12,zeros(3x1)), mac((@13\\\n[[1, 0, 0], \n [0, 1, 0], \n [0, 0, 1]]),(u[3:6]+mac(((((((zeros(3x3)[3] = (-@14))[1] = @14)[6] = @15)[2] = (-@15))[7] = (-@16))[5] = @16),mac(@13,@12,zeros(3x1)),zeros(3x1))),zeros(3x1))))",
        "gnsf": {
            "nontrivial_f_LO": 1,
            "purely_linear": 0
        },
        "name": "astrobee",
        "p": "vertcat(xref, x_lim, mass, inertia, q, r)",
        "u": "u",
        "x": "x",
        "xdot": "xdot",
        "z": "0x0"
    },
    "parameter_values": [
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0
    ],
    "problem_class": "OCP",
    "shared_lib_ext": ".so",
    "solver_options": {
        "Tsim": 0.1,
        "alpha_min": 0.05,
        "alpha_reduction": 0.7,
        "collocation_type": "GAUSS_LEGENDRE",
        "custom_update_filename": "",
        "custom_update_header_filename": "",
        "eps_sufficient_descent": 0.0001,
        "exact_hess_constr": 1,
        "exact_hess_cost": 1,
        "exact_hess_dyn": 1,
        "ext_cost_num_hess": 0,
        "ext_fun_compile_flags": "-O2",
        "full_step_dual": 0,
        "globalization": "FIXED_STEP",
        "globalization_use_SOC": 0,
        "hessian_approx": "EXACT",
        "hpipm_mode": "BALANCE",
        "initialize_t_slacks": 0,
        "integrator_type": "ERK",
        "levenberg_marquardt": 0.0,
        "line_search_use_sufficient_descent": 0,
        "model_external_shared_lib_dir": null,
        "model_external_shared_lib_name": null,
        "nlp_solver_ext_qp_res": 0,
        "nlp_solver_max_iter": 100,
        "nlp_solver_step_length": 1.0,
        "nlp_solver_tol_comp": 1e-06,
        "nlp_solver_tol_eq": 1e-06,
        "nlp_solver_tol_ineq": 1e-06,
        "nlp_solver_tol_stat": 1e-06,
        "nlp_solver_type": "SQP_RTI",
        "print_level": 0,
        "qp_solver": "PARTIAL_CONDENSING_OSQP",
        "qp_solver_cond_N": null,
        "qp_solver_cond_ric_alg": 1,
        "qp_solver_iter_max": 50,
        "qp_solver_ric_alg": 1,
        "qp_solver_tol_comp": null,
        "qp_solver_tol_eq": null,
        "qp_solver_tol_ineq": null,
        "qp_solver_tol_stat": null,
        "qp_solver_warm_start": 0,
        "regularize_method": null,
        "shooting_nodes": null,
        "sim_method_jac_reuse": [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "sim_method_newton_iter": 3,
        "sim_method_newton_tol": 0.0,
        "sim_method_num_stages": [
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4
        ],
        "sim_method_num_steps": [
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1
        ],
        "tf": 1.0,
        "time_steps": [
            0.1,
            0.1,
            0.1,
            0.1,
            0.1,
            0.1,
            0.1,
            0.1,
            0.1,
            0.1
        ]
    }
}